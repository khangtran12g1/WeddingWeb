import cnhu from "../image/cnhu.jpg";
import atrieu from "../image/atrieu.jpg";
import { useCart } from "../components/CartContext";


import { Swiper, SwiperSlide } from 'swiper/react';
import { Thumbs, FreeMode, Navigation } from 'swiper/modules';
import type { Swiper as SwiperType } from 'swiper';

import 'swiper/css';
import 'swiper/css/thumbs';
import 'swiper/css/free-mode';
import 'swiper/css/navigation'

import { useEffect} from "react";
import {BASE_URL} from "../../../link"
import { useState } from "react";
import { Link, useParams } from "react-router-dom";
import axios from 'axios';
import toast from "react-hot-toast";

export interface ProductImage {
  id: number;
  product_id: number;
  image_url: string;
}

export interface ProductDetail {
  id: number;
  subcategory_id: number;
  subcategory_name: string;
  category_id: number;
  category_name: string;
  package_id: number;
  name: string;
  short_description: string;
  full_description: string;
  price: number;
  type: string;
  images: ProductImage[];
}

function ProductDetail() {
//{ them vao gio hang
    const { addToCart } = useCart();
    
    const [productDetail, setProductDetail] = useState<ProductDetail | null>(null);
    const { id } = useParams();
    const getProductDetailById = async (id: string): Promise<ProductDetail | null> => {
        try {
            const res = await axios.get(`${BASE_URL}/userProductDetail/productDetail/${id}/details`);
            if (res.data.success) {
            setProductDetail(res.data.data);
            }
            return null;
        } catch (err) {
            console.error("L·ªói khi g·ªçi API chi ti·∫øt s·∫£n ph·∫©m:", err);
            return null;
        }
    };
    useEffect(() => {
        if (id) {
            getProductDetailById(id);
        }
    }, [id]);


    const [phone, setPhone] = useState("");
    const [thumbsSwiper, setThumbsSwiper] = useState<SwiperType | null>(null);
    const [quantity, setQuantity] = useState(1);

    const increase = () => setQuantity((q) => q + 1);
    const decrease = () => setQuantity((q) => Math.max(1, q - 1));



    const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement>) => {
        e.preventDefault();

        try {
            const res = await axios.post(`${BASE_URL}/lienHe/send`, { name: "Kh√¥ng", phone: phone, message: "Y√™u c·∫ßu g·ªçi l·∫°i" });

            if (res.status === 200) {
            toast.success("G·ª≠i th√†nh c√¥ng");
            setPhone("");
            }
        } catch (error) {
            console.error("L·ªói g·ª≠i li√™n h·ªá:", error);
            toast.error("G·ª≠i kh√¥ng th√†nh c√¥ng");
        }
    };

    const colors = [
        { name: "M√†u ƒê·ªè", class: "bg-red-500" },
        { name: "M√†u Xanh D∆∞∆°ng", class: "bg-blue-500" },
        { name: "M√†u Xanh L√°", class: "bg-green-500" },
        { name: "M√†u V√†ng", class: "bg-yellow-400" },
        { name: "M√†u T√≠m", class: "bg-purple-500" },
        { name: "M√†u Cam", class: "bg-orange-500" },
        { name: "M√†u H·ªìng", class: "bg-pink-400" },
        { name: "M√†u X√°m", class: "bg-gray-500" },
    ];

  return (
    <>
      <div className="my-8 bg-white md:mx-24">
        <div className="flex gap-2 [&>h2]:text-gray-400 [&>h2]:text-lg mb-4 px-4" >
          <h2>TRANG CH·ª¶</h2>
          <h2>/</h2>
          <h2>{productDetail?.subcategory_name}</h2>
        </div>
        <div className="md: grid grid-cols-1 md:grid-cols-2">
        {/* Ph·∫ßn ·∫£nh */}
          <div className="px-4 md:sticky top-20 h-fit gap-4">
            <Swiper
                spaceBetween={10}
                navigation={true}
                thumbs={{ swiper: thumbsSwiper && !thumbsSwiper.destroyed ? thumbsSwiper : null }}
                watchSlidesProgress={true} // QUAN TR·ªåNG
                modules={[Navigation, Thumbs]}
                className="mb-4"
            >
                {productDetail?.images.map((img) => (
                <SwiperSlide key={img.id}>
                    <div className="w-full aspect-[16/11]">
                        <img src={img.image_url} alt={`img-${img.id}`} className="w-full h-full object-cover" />
                    </div>
                </SwiperSlide>
                ))}
            </Swiper>
            
                <div className="thumbs-swiper">
                    <Swiper
                        onSwiper={setThumbsSwiper}
                        spaceBetween={10}
                        slidesPerView="auto"
                        freeMode={true}
                        watchSlidesProgress={true}
                        slideToClickedSlide={true} 
                        modules={[FreeMode, Thumbs]}
                    >
                        {productDetail?.images.map((img) => (
                        <SwiperSlide key={img.id} className="!w-[100px]">
                            <img src={img.image_url} alt={`thumb-${img.id}`} className="cursor-pointer aspect-video object-cover" />
                        </SwiperSlide>
                        ))}
                    </Swiper>
                </div>
            </div>
            {/* B√™n ph·∫£i ph·∫ßn ·∫£nh */}
          <div className="px-4 flex flex-col gap-4">
            <h2 className="xl:text-3xl text-xl font-medium">{productDetail?.name}</h2>
            <div className="flex xl:text-2xl text-lg font-medium">
                <h2 >Gi√°:&nbsp;</h2>
                <h2 className=" text-red-600">{productDetail?.price} ƒë</h2>
            </div>
            {productDetail?.category_name==="D·ªãch V·ª• C∆∞·ªõi H·ªèi" &&
            <div className="flex flex-col [&>h2]:text-lg font-medium gap-3">
                <h2>C√ÅC TONE M√ÄU HI·ªÜN C√ì:</h2>
                <div className="grid grid-cols-8 sm:grid-cols-8 md:grid-cols-8 lg:grid-cols-8 xl:grid-cols-8 gap-4">
  {colors.map((color, index) => (
    <div
      key={index}
      className="flex flex-col items-center border rounded p-2"
    >
      <div className={`${color.class} w-full aspect-square rounded`}></div>
      <p className="text-xs text-center mt-2">{color.name}</p>
    </div>
  ))}
</div>

            </div>

            }
            <div className="flex flex-col editor-output-category font-timesnewroman gap-4" 
                dangerouslySetInnerHTML={{ __html: productDetail?.short_description ||"" }}>
            </div>
            {/* <div className="flex flex-col [&>h2]:text-lg font-medium gap-3">
                <h2>DANH M·ª§C BAO G·ªíM:</h2>
                <ul className="list-decimal list-inside space-y-1 text-gray-700 text-lg font-timesnewroman">
                    <li>Trang tr√≠ c·ªïng hoa l·ª•a cao c·∫•p</li>
                    <li>Trang tr√≠ phong m√†n voan + hoa l·ª•a + ch·ªØ h·ª∑</li>
                    <li>Trang tr√≠ b√†n th·ªù gia ti√™n + b·ªô l∆∞ ƒë·ªìng</li>
                    <li>Trang tr√≠ b√†n ƒë·ªÉ m√¢m qu·∫£</li>
                    <li>Trang tr√≠ b√†n 2 h·ªç + 12 gh·∫ø tiffany</li>
                    <li>Trang tr√≠ 2 b·ªô ·∫•m t√°ch tr√†</li>
                    <li>Trang tr√≠ 2 hoa l·ª•a ƒë·ªÉ b√†n h·ªç</li>
                    <li>Thi·∫øt k·∫ø b·∫£ng t√™n c√¥ d√¢u v√† ch√∫ r·ªÉ</li>
                </ul>
            </div>
            <hr/>
            <div className="flex flex-col [&>h2]:text-lg font-medium gap-3 ">
                <h2>H·ªñ TR·ª¢ TH√äM:</h2>
                <ul className="list-disc list-inside space-y-1 text-gray-700 text-lg font-timesnewroman" >
                    <li><span className="text-red-500">T·∫∑ng:&nbsp;</span>12 chai n∆∞·ªõc su·ªëi in t√™n</li>
                    <li><span className="text-red-500">T·∫∑ng:&nbsp;</span>10 b√¥ng c√†i √°o</li>
                    <li><span className="text-red-500">T·∫∑ng:&nbsp;</span>2 ƒëƒ©a 3 t·∫ßn cao c·∫•p</li>
                </ul>
            </div> */}
            <hr/>
            <p className="text-lg font-timesnewroman">H√£y ƒë·ªÉ C∆∞·ªõi H·ªèi Phu Th√™ c√≥ c∆° h·ªôi ƒë∆∞·ª£c ph·ª•c v·ª• b·∫°n</p>
            <div className="flex items-center gap-7">
                <img src={cnhu} className="w-16 h-auto"/>
                <div className="flex flex-col">
                    <p className="font-bold">C.V√¥n</p>
                    <p className="flex items-center">
                        <a>üìû0967784511</a>
                        &nbsp;-&nbsp;
                        <a target="_blank" href="" className="flex"><img className="w-6" src="https://phuthewedding.com/wp-content/uploads/2023/03/icon-zalo-circle2.png.pagespeed.ce_.iUc59tfITH.png"/>Zalo</a>
                        &nbsp;-&nbsp;
                        <a target="_blank" href="" className="flex"><img className="w-6" src="https://phuthewedding.com/wp-content/uploads/2023/03/icon-messenger.png.pagespeed.ce_.sSebhnGGgP.png"/>FaceBook</a>
                    </p>
                </div>
            </div>
            <div className="flex items-center gap-7">
                <img src={atrieu} className="w-16 h-auto"/>
                <div className="flex flex-col">
                    <p className="font-bold">A.Khang</p>
                    <p className="flex items-center">
                        <a href="">üìû0967784511</a>
                        &nbsp;-&nbsp;
                        <a target="_blank" href="" className="flex"><img className="w-6" src="https://phuthewedding.com/wp-content/uploads/2023/03/icon-zalo-circle2.png.pagespeed.ce_.iUc59tfITH.png"/>Zalo</a>
                        &nbsp;-&nbsp;
                        <a target="_blank" href="https://www.facebook.com/tran.an.khang.993446/?locale=vi_VN" className="flex"><img className="w-6" src="https://phuthewedding.com/wp-content/uploads/2023/03/icon-messenger.png.pagespeed.ce_.sSebhnGGgP.png"/>FaceBook</a>
                    </p>
                </div>
            </div>
            <div className="flex flex-col p-6 bg-blue-400 md:w-2/3 gap-4 rounded-xl">
                <p className="text-white font-timesnewroman text-center text-lg">Y√™u c·∫ßu Phuthewedding g·ªçi l·∫°i</p>
                <div className="flex gap-3">
                    <input className="border rounded-lg text-base focus:outline-none p-2"
                        value={phone}
                        onChange={(values) => setPhone(values.target.value)}
                        placeholder="S·ªë ƒëi·ªán tho·∫°i c·∫ßn t∆∞ v·∫•n"
                        />
                    <button className="text-white hover:text-black" onClick={ handleSubmit}>G·ª≠i</button>
                </div>
            </div>
            <div className="flex items-center">
                <button
                    onClick={decrease}
                    className="w-10 h-10 rounded bg-gray-200 text-xl hover:bg-gray-300"> ‚Äì </button>

                <input
                    type="number" value={quantity} readOnly
                    className="w-16 h-10 text-center border border-gray-300 rounded"
                />

                <button
                    onClick={increase}
                    className="w-10 h-10 rounded bg-gray-200 text-xl hover:bg-gray-300"> + </button>

                <button onClick={()=>addToCart({
                    id: productDetail?.id ?? 0,
                    name: productDetail?.name ?? "Kh√¥ng t√™n",
                    price: productDetail?.price ?? 0,
                    img: productDetail?.images?.[0].image_url ?? "",
                    quantity:quantity
                })}
                    className="flex items-center gap-2 py-2 px-4 bg-red-600 text-white rounded hover:bg-red-700 ml-4">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="w-5 h-5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.5 6h13M7 13L5.4 5M16 21a1 1 0 100-2 1 1 0 000 2zm-8 0a1 1 0 100-2 1 1 0 000 2z" />
                    </svg>
                    Th√™m v√†o gi·ªè
                </button>

                <button
                    onClick={()=>addToCart({
                        id: productDetail?.id ?? 0,
                        name: productDetail?.name ?? "Kh√¥ng t√™n",
                        price: productDetail?.price ?? 0,
                        img: productDetail?.images?.[0].image_url ?? "",
                        quantity:quantity
                    })}
                    className="flex items-center gap-2 px-4 py-2 bg-yellow-400 text-white rounded hover:bg-yellow-700 ml-4"
                    >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        className="w-6 h-6 text-white fill-current"
                        >
                        <path d="M13 2L3 14h7v8l10-12h-7z" />
                    </svg>
                    <Link to={"/Order"}>
                    ƒê·∫∑t ngay
                    </Link>
                </button>

            </div>
          </div>
          
        </div>

        <div className="border-gray-300 w-full border-b px-4 py-4"></div>
        {/* M√¥ t·∫£ */}
        <div className="flex flex-col gap-4 font-timesnewroman [&>p]:text-lg">
            <div className="inline-flex w-fit items-center gap-3 px-4 py-2 font-timesnewroman text-2xl text-red-500 border rounded-md font-bold mt-5">
                M√î T·∫¢
                <svg
                    className="w-6 h-6 text-gray-500"
                    fill="none"
                    stroke="currentColor"
                    strokeWidth={2}
                    viewBox="0 0 24 24"
                    xmlns="http://www.w3.org/2000/svg"
                    >
                    <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M8 16h8M8 12h8m-8-4h8M4 6h16a2 2 0 012 2v12a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2z"
                    />
                </svg>
            </div>
            <div className="flex flex-col editor-output-describe font-timesnewroman gap-4" 
                dangerouslySetInnerHTML={{ __html: productDetail?.full_description ||"" }}>
            </div>
            {/* <h2 className="text-[1.6em] flex items-center font-bold gap-2">
                <img draggable="false" className="w-[1em] h-[1em]" src="https://s.w.org/images/core/emoji/15.1.0/svg/1f4cc.svg"/>
                D·ªãch V·ª• Trang Tr√≠ Gia Ti√™n ƒê√°m C∆∞·ªõi T·∫°i Nh√† ‚Äì Phu Th√™ Wedding
            </h2>
            <p><strong>Trang tr√≠ gia ti√™n ƒë√°m c∆∞·ªõi </strong>l√† nghi th·ª©c quan tr·ªçng, kh√¥ng th·ªÉ thi·∫øu trong m·ªói l·ªÖ c∆∞·ªõi ‚Äì l·ªÖ h·ªèi c·ªßa ng∆∞·ªùi Vi·ªát. ƒê√¢y l√† n∆°i b√†y t·ªè l√≤ng th√†nh k√≠nh v·ªõi t·ªï ti√™n v√† l√† kh√¥ng gian ch·ª©ng ki·∫øn nh·ªØng nghi th·ª©c thi√™ng li√™ng c·ªßa c√¥ d√¢u ‚Äì ch√∫ r·ªÉ.</p>
            <p><strong>Phu Th√™ Wedding</strong> mang ƒë·∫øn d·ªãch v·ª• <strong>trang tr√≠ gia ti√™n</strong> t·∫°i nh√† tr·ªçn g√≥i, thi·∫øt k·∫ø sang tr·ªçng, trang nh√£ v√† ƒë√∫ng chu·∫©n phong t·ª•c truy·ªÅn th·ªëng.</p>
            <hr></hr>
            <h2 className="text-[1.6em] flex items-center font-bold gap-2">
                <img draggable="false" className="w-[1em] h-[1em]" src="https://s.w.org/images/core/emoji/15.1.0/svg/1f380.svg"/>
                H·∫°ng M·ª•c Trang Tr√≠ Gia Ti√™n Bao G·ªìm:
            </h2>
            <ol className="list-decimal ml-[1.3em] text-lg [&>li]:mb-4">
                <li><p>Phong m√†n voan v·∫£i l·ª•a cao c·∫•p, trang tr√≠ ch·ªØ H·ª∑ v√† hoa l·ª•a.</p></li>
                <li><p>B√†n th·ªù gia ti√™n ph·ªß v·∫£i ren ƒë·∫πp, trang tr√≠ b·ªô l∆∞ ƒë·ªìng (g·ªìm b·ªô ƒë·ªânh, hai ch√¢n ƒë√®n v√† b√°t nhang)..</p></li>
                <li><p>B√†n ƒë·ªÉ m√¢m qu·∫£ ph·ªß ren ƒë·ªìng b·ªô, b√†y ƒë∆∞·ª£c 6 qu·∫£ theo ƒë√∫ng nghi l·ªÖ.</p></li>
                <li><p>B√†n ti·∫øp hai h·ªç d√†i 2m4, ph·ªß v·∫£i ren cao c·∫•p, s·∫Øp x·∫øp 12 gh·∫ø (m·ªói b√™n 6 gh·∫ø).</p></li>
                <li><p>B·ªô ·∫•m tr√† g·ªìm 2 b√¨nh, 12 t√°ch v√† 14 ƒëƒ©a nh·ªè d√πng trong nghi l·ªÖ m·ªùi tr·∫ßu ‚Äì m·ªùi n∆∞·ªõc.</p></li>
                <li><p>Hai b√¨nh hoa l·ª•a cao c·∫•p, ph·ªëi m√†u theo t√¥ng ch·ªß ƒë·∫°o ho·∫∑c theo √Ω th√≠ch.</p></li>
                <li><p>B·∫£ng t√™n c√¥ d√¢u ‚Äì ch√∫ r·ªÉ in tr√™n b·∫£ng c·ª©ng ƒë·∫πp m·∫Øt, ƒë·∫∑t t·∫°i khu v·ª±c b√†n th·ªù ho·∫∑c c·ªïng hoa.</p></li>
                <li><p>C·ªïng hoa l·ª•a cao c·∫•p, treo b·∫£ng ch·ªØ ‚ÄúT√¢n H√¥n‚Äù ho·∫∑c ‚ÄúVu Quy‚Äù.</p></li>
            </ol>
            <hr/>
            <h2 className="text-[1.6em] flex items-center font-bold gap-2">
                <img draggable="false" className="w-[1em] h-[1em]" src="https://s.w.org/images/core/emoji/15.1.0/svg/1f381.svg"/>
                H·ªó Tr·ª£ & Khuy·∫øn M√£i K√®m Theo:
            </h2>
            <ul className="list-disc text-lg font-timesnewroman ml-[1.3em] [&>li]:mb-4">
                <li><p>2 k·ªá 3 t·∫ßng b√†y l·ªÖ v·∫≠t ho·∫∑c b√°nh tr√°i.</p></li>
                <li><p>ƒê√®n nh√°y trang tr√≠ cho kh√¥ng gian th√™m lung linh.</p></li>
                <li><p>12 chai n∆∞·ªõc su·ªëi in t√™n c√¥ d√¢u ‚Äì ch√∫ r·ªÉ t·∫∑ng kh√°ch.</p></li>
                <li><p>12 hoa c√†i √°o cho h·ªç h√†ng hai b√™n.</p></li>
            </ul>
            <hr/>
            <h2 className="text-[1.6em] flex items-center font-bold gap-2">
                <img draggable="false" className="w-[1em] h-[1em]" src="https://s.w.org/images/core/emoji/15.1.0/svg/2728.svg"/>
                H·∫°ng M·ª•c Trang Tr√≠ Gia Ti√™n Bao G·ªìm:
            </h2>
            <p>Ngo√†i g√≥i c∆° b·∫£n, Phu Th√™ Wedding nh·∫≠n thi·∫øt k·∫ø theo √Ω t∆∞·ªüng ho·∫∑c m·∫´u c√≥ s·∫µn c·ªßa kh√°ch:</p>
            <ul className="list-disc text-lg font-timesnewroman ml-[1.3em] [&>li]:mb-4">
                <li><p>Thay ƒë·ªïi m√†u s·∫Øc, ki·ªÉu d√°ng c·ªïng hoa, b√†n th·ªù.</p></li>
                <li><p>Trang tr√≠ th√™m r·∫°p c∆∞·ªõi, s√¢n kh·∫•u, b√†n gallery, c·∫ßu thang, l·ªëi ƒëi.</p></li>
                <li><p>Nh·∫≠n thi c√¥ng tr·ªçn g√≥i t·∫°i nh√† ƒë√∫ng chu·∫©n l·ªÖ nghi truy·ªÅn th·ªëng.</p></li>
            </ul> */}
            <p><img className="w-[1em] h-[1em] float-left mr-1 mt-1" src="https://s.w.org/images/core/emoji/15.1.0/svg/1f699.svg"/> Ch√∫ng t√¥i chuy√™n cung c·∫•p d·ªãch v·ª• c∆∞·ªõi h·ªèi tr·ªçn g√≥i t·∫°i TP.HCM, s·∫µn s√†ng ph·ª•c v·ª• t·∫•t c·∫£ c√°c qu·∫≠n nh∆∞: Qu·∫≠n 1, Qu·∫≠n 3, Qu·∫≠n 5, Qu·∫≠n 7, Qu·∫≠n 10, B√¨nh Th·∫°nh, G√≤ V·∫•p, T√¢n B√¨nh, T√¢n Ph√∫, Ph√∫ Nhu·∫≠n, Th·ªß ƒê·ª©c, B√¨nh T√¢n, H√≥c M√¥n, Nh√† B√®, Qu·∫≠n 12, v√† c√°c khu v·ª±c l√¢n c·∫≠n.</p>
            <p>D√π b·∫°n ·ªü trung t√¢m hay v√πng ven, ƒë·ªôi ng≈© c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ t·∫≠n n∆°i, ƒë·∫£m b·∫£o uy t√≠n ‚Äì chuy√™n nghi·ªáp ‚Äì ƒë√∫ng gi·ªù.</p>
        </div>
        
        <div className="flex flex-col items-center">
            <h2 className="text-2xl font-bold font-timesnewroman m-5">H√¨nh ·∫£nh th·ª±c t·∫ø t·∫°i Phuthewedding</h2>
             {productDetail?.images.map((image)=>(
                <div key={image.id} className="w-full h-full  aspect-[16/9] my-3 xl:w-9/12 ">
                    <img src={image.image_url} alt={`img ${image.id}`} className=" w-full h-full object-cover border rounded-3xl"/>
                </div>
             ))}              
        </div>
        

      </div>
      
    </>
  );
}
export default ProductDetail;
